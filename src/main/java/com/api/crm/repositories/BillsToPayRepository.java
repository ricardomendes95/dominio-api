package com.api.crm.repositories;

import com.api.crm.database.IDatabase;
import com.api.crm.model.BillsToPay;
import com.api.crm.repositories.interfaces.IBillsToPayRepository;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class BillsToPayRepository implements IBillsToPayRepository {
   @Autowired
   private IDatabase database;

   public List<BillsToPay> getListBillsToPays(String data, int idEmp) {
      Connection connection = this.database.getConnection();
      List<BillsToPay> billsToPayList = new ArrayList();
      PreparedStatement statement = null;

      try {
         statement = connection.prepareStatement("SELECT EFENTRADAS.CODI_FOR, COALESCE(TD0.C0, DSDBA.C_CHAR(32)) AS qry_forne, EFENTRADAS.NUME_ENT, CONVERT( VARCHAR(10), EFENTRADAS.DDOC_ENT    , 103 )AS qry_emissao, CONVERT( VARCHAR(10), EFENTRADAS.DENT_ENT    , 103 )AS qry_entrada, CONVERT( VARCHAR(10), EFENTRADASPAR.VCTO_ENTP, 103 )AS qry_vencmto, EFENTRADASPAR.VBRU_ENTP - (COALESCE(TD1.C0, 0) - COALESCE(TD2.C0, 0) - COALESCE(TD3.C0, 0) + COALESCE(TD4.C0, 0) + COALESCE(TD5.C0, 0)) AS VBRU        FROM BETHADBA.GEEMPRE AS GEEMPRE,             BETHADBA.EFESPECIES AS EFESPECIES,             BETHADBA.EFENTRADAS AS EFENTRADAS        LEFT OUTER JOIN (SELECT EFFORNECE.NOME_FOR, EFFORNECE.CODI_FOR            FROM BETHADBA.EFFORNECE AS EFFORNECE            WHERE EFFORNECE.CODI_EMP = " + idEmp + "           )AS TD0(C0, C1)        ON TD0.C1 = EFENTRADAS.CODI_FOR        LEFT OUTER JOIN (SELECT G.CRFFATGER_PAR AS CRFFATGER,      G.CRFPERINI_PAR AS CRFPERINI,      G.IRRFFATGER_PAR AS IRRFFATGER,      G.IRRFPERINI_PAR AS IRRFPERINI,      G.CODI_EMP AS CODI_EMP            FROM BETHADBA.EFPARAM G           )AS TD_PARM        ON TD_PARM.CODI_EMP = EFENTRADAS.CODI_EMP,             BETHADBA.EFENTRADASPAR AS EFENTRADASPAR        LEFT OUTER JOIN (SELECT SUM(EFENTRADASPAG.VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP = 1              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP/* Normal */           )AS TD1(C0, C1, C2, C3)        ON EFENTRADASPAR.CODI_EMP  = TD1.C1       AND EFENTRADASPAR.CODI_ENT  = TD1.C2       AND EFENTRADASPAR.PARC_ENTP = TD1.C3        LEFT OUTER JOIN (SELECT SUM(EFENTRADASPAG.VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP = 2              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP/* Juros */           )AS TD2(C0, C1, C2, C3)        ON EFENTRADASPAR.CODI_EMP  = TD2.C1       AND EFENTRADASPAR.CODI_ENT  = TD2.C2       AND EFENTRADASPAR.PARC_ENTP = TD2.C3        LEFT OUTER JOIN (SELECT SUM(EFENTRADASPAG.VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP = 3              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP/* Multa */           )AS TD3(C0, C1, C2, C3)        ON EFENTRADASPAR.CODI_EMP  = TD3.C1       AND EFENTRADASPAR.CODI_ENT  = TD3.C2       AND EFENTRADASPAR.PARC_ENTP = TD3.C3        LEFT OUTER JOIN (SELECT SUM(EFENTRADASPAG.VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP = 4              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP/* Desconto */           )AS TD4(C0, C1, C2, C3)        ON EFENTRADASPAR.CODI_EMP  = TD4.C1       AND EFENTRADASPAR.CODI_ENT  = TD4.C2       AND EFENTRADASPAR.PARC_ENTP = TD4.C3        LEFT OUTER JOIN (SELECT SUM(EFENTRADASPAG.VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP = 5              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP/* Devoluo */           )AS TD5(C0, C1, C2, C3)        ON EFENTRADASPAR.CODI_EMP  = TD5.C1       AND EFENTRADASPAR.CODI_ENT  = TD5.C2       AND EFENTRADASPAR.PARC_ENTP = TD5.C3        LEFT OUTER JOIN (SELECT SUM(VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP IN (1, 4, 5, 6, 7, 8, 9, 10, 100)              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )            GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP           )AS TD6 ( C0, C1, C2, C3 )        ON TD6.C1 = EFENTRADASPAR.CODI_EMP       AND TD6.C2 = EFENTRADASPAR.CODI_ENT       AND TD6.C3 = EFENTRADASPAR.PARC_ENTP        LEFT OUTER JOIN (SELECT SUM(VPAG_ENTP), EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP            FROM BETHADBA.EFENTRADASPAG AS EFENTRADASPAG            WHERE EFENTRADASPAG.TIPO_ENTP IN (2, 3)              AND EFENTRADASPAG.PGTO_ENTP <= CONVERT( DATETIME, ' " + data + "', 104 )        GROUP BY EFENTRADASPAG.CODI_EMP, EFENTRADASPAG.CODI_ENT, EFENTRADASPAG.PARC_ENTP           )AS TD7 ( C0, C1, C2, C3 )        ON TD7.C1 = EFENTRADASPAR.CODI_EMP       AND TD7.C2 = EFENTRADASPAR.CODI_ENT       AND TD7.C3 = EFENTRADASPAR.PARC_ENTP        WHERE GEEMPRE.CODI_EMP =  " + idEmp + "   AND GEEMPRE.CODI_EMP = EFENTRADAS.CODI_EMP AND EFENTRADASPAR.CODI_EMP = EFENTRADAS.CODI_EMP AND EFENTRADASPAR.CODI_ENT = EFENTRADAS.CODI_ENT AND EFENTRADAS.CODI_ESP = EFESPECIES.CODI_ESP AND ( ( CASE WHEN ( EFENTRADASPAR.VBRU_ENTP - ( CASE WHEN ( COALESCE( TD6.C0, 0 ) - COALESCE( TD7.C0, 0 ) ) > 0 THEN           ( COALESCE ( TD6.C0, 0 ) - COALESCE ( TD7.C0, 0 ) ) + COALESCE( VISSR_ENTP, 0 ) + COALESCE( VIRRFPF_ENTP, 0 ) + COALESCE( VINSS_ENTP, 0 ) + COALESCE( VFUNRURAL_ENTP, 0 )           +           ( CASE WHEN COALESCE( TD_PARM.CRFFATGER, 'E' ) = 'P' AND TD_PARM.CRFPERINI <= DENT_ENT THEN     0             ELSE     COALESCE( VCRF_ENTP, 0 ) + COALESCE( VPISRET_ENTP, 0 ) + COALESCE( VCOFRET_ENTP, 0 ) + COALESCE( VCSOCRET_ENTP, 0 )             END )           +           ( CASE WHEN COALESCE( TD_PARM.IRRFFATGER, 'E') = 'P' AND TD_PARM.IRRFPERINI <= DENT_ENT THEN     0             ELSE     COALESCE( VIRRF_ENTP, 0 )             END )      ELSE           0      END )  ) = EFENTRADASPAR.VBRU_ENTP AND EFENTRADASPAR.VCTO_ENTP > CONVERT( DATETIME, ' " + data + "', 104 ) THEN          1 /* Aberta */     ELSE          CASE WHEN ( EFENTRADASPAR.VBRU_ENTP - ( CASE WHEN ( COALESCE ( TD6.C0, 0 ) - COALESCE ( TD7.C0, 0 ) ) > 0 THEN                ( COALESCE ( TD6.C0, 0 ) - COALESCE ( TD7.C0, 0 ) ) + COALESCE( VISSR_ENTP, 0 ) + COALESCE( VIRRFPF_ENTP, 0 ) + COALESCE( VINSS_ENTP, 0 ) + COALESCE( VFUNRURAL_ENTP, 0 )                +                ( CASE WHEN COALESCE( TD_PARM.CRFFATGER, 'E' ) = 'P' AND TD_PARM.CRFPERINI <= DENT_ENT THEN          0     ELSE          COALESCE( VCRF_ENTP, 0 ) + COALESCE( VPISRET_ENTP, 0 ) + COALESCE( VCOFRET_ENTP, 0 ) + COALESCE( VCSOCRET_ENTP, 0 )     END )                +                ( CASE WHEN COALESCE( TD_PARM.IRRFFATGER, 'E' ) = 'P' AND TD_PARM.IRRFPERINI <= DENT_ENT THEN          0     ELSE          COALESCE( VIRRF_ENTP, 0 )     END )           ELSE                0           END )       ) = EFENTRADASPAR.VBRU_ENTP THEN  1 /* Aberta */          ELSE              CASE WHEN ( EFENTRADASPAR.VBRU_ENTP - ( CASE WHEN ( COALESCE ( TD6.C0, 0 ) - COALESCE ( TD7.C0, 0 ) ) > 0 THEN       ( COALESCE ( TD6.C0, 0 ) - COALESCE ( TD7.C0, 0 ) ) + COALESCE( VISSR_ENTP, 0 ) + COALESCE( VIRRFPF_ENTP, 0 ) + COALESCE( VINSS_ENTP, 0 ) + COALESCE( VFUNRURAL_ENTP, 0 )       +       ( CASE WHEN COALESCE( TD_PARM.CRFFATGER, 'E' ) = 'P' AND TD_PARM.CRFPERINI <= DENT_ENT THEN              0         ELSE              COALESCE( VCRF_ENTP, 0 ) + COALESCE( VPISRET_ENTP, 0 ) + COALESCE( VCOFRET_ENTP, 0 ) + COALESCE( VCSOCRET_ENTP, 0 )         END )       +       ( CASE WHEN COALESCE( TD_PARM.IRRFFATGER, 'E' ) = 'P' AND TD_PARM.IRRFPERINI <= DENT_ENT THEN              0         ELSE              COALESCE( VIRRF_ENTP, 0 )         END )               ELSE       0               END )           ) <= 0 THEN      2 /* Paga */              ELSE      3 /* Pagto Parcial */              END          END     END ) IN ( 1, 3 ) ) /* Aberta ou Pagto Parcial */ AND NOT ( EFENTRADAS.DENT_ENT > CONVERT( DATETIME, ' " + data + "', 104 ) )        ORDER BY 2, 1");
         ResultSet rs = statement.executeQuery();
         System.out.println("/billstopay params: date:" + data + " idEmp:" + idEmp);

         while(rs.next()) {
            billsToPayList.add(new BillsToPay(rs.getInt("CODI_FOR"), rs.getString("qry_forne"), rs.getDouble("NUME_ENT"), rs.getString("qry_emissao"), rs.getString("qry_entrada"), rs.getString("qry_vencmto"), rs.getDouble("VBRU")));
         }

         statement.close();
         ArrayList var7 = billsToPayList;
         return var7;
      } catch (Exception var17) {
         var17.printStackTrace();
      } finally {
         try {
            statement.close();
         } catch (Exception var16) {
            var16.printStackTrace();
         }

      }

      return billsToPayList;
   }
}
